// <auto-generated />
using System;
using HealthMed.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthMed.Infra.Data.Migrations
{
    [DbContext(typeof(HealthMedContext))]
    [Migration("20240801005443_AddTableAgendaPaciente")]
    partial class AddTableAgendaPaciente
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HealthMed.Domain.Models.AgendaMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdHorario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMedico")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdMedico");

                    b.ToTable("AgendaMedica");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.AgendaPaciente", b =>
                {
                    b.Property<Guid>("IdAgendaMedica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdAgendaMedica", "IdPaciente");

                    b.HasIndex("IdAgendaMedica")
                        .IsUnique();

                    b.HasIndex("IdPaciente");

                    b.ToTable("AgendaPaciente");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.ClaimPerfil", b =>
                {
                    b.Property<Guid>("IdClaim")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPerfil")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdClaim", "IdPerfil");

                    b.HasIndex("IdPerfil");

                    b.ToTable("ClaimPerfil");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.ClaimUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("ClaimUsuario");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.PerfilUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("IdTipoPerfil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("IdEspecialidade")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPerfil")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecialidade");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.TabelaDominio.Especialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.TabelaDominio.Horario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.AgendaMedica", b =>
                {
                    b.HasOne("HealthMed.Domain.Models.TabelaDominio.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("IdHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthMed.Domain.Models.Autenticacao.Usuario", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horario");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.AgendaPaciente", b =>
                {
                    b.HasOne("HealthMed.Domain.Models.AgendaMedica", "AgendaMedica")
                        .WithMany()
                        .HasForeignKey("IdAgendaMedica")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HealthMed.Domain.Models.Autenticacao.Usuario", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgendaMedica");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.ClaimPerfil", b =>
                {
                    b.HasOne("HealthMed.Domain.Models.Autenticacao.ClaimUsuario", "Claim")
                        .WithMany()
                        .HasForeignKey("IdClaim")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HealthMed.Domain.Models.Autenticacao.PerfilUsuario", "Perfil")
                        .WithMany("ClaimsPerfil")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.Usuario", b =>
                {
                    b.HasOne("HealthMed.Domain.Models.TabelaDominio.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("IdEspecialidade");

                    b.HasOne("HealthMed.Domain.Models.Autenticacao.PerfilUsuario", "Perfil")
                        .WithMany()
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("HealthMed.Domain.Models.Autenticacao.PerfilUsuario", b =>
                {
                    b.Navigation("ClaimsPerfil");
                });
#pragma warning restore 612, 618
        }
    }
}
